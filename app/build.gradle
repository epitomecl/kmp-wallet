apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'com.novoda.build-properties'

buildProperties {
    secrets {
        using project.file('secrets.properties')
    }
}

android {
    //build for jenkins
    lintOptions {
        abortOnError false
    }

    splits {
        abi {
            enable true
            reset()
            include 'x86', 'armeabi-v7a'
            universalApk true
        }
    }

    compileSdkVersion 27
    defaultConfig {
        applicationId "com.epitomecl.kmpwallet"
        minSdkVersion 16
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        compileOptions {
            sourceCompatibility JavaVersion.VERSION_1_8
            targetCompatibility JavaVersion.VERSION_1_8
        }

        //for google auto-value annotation
        javaCompileOptions {
            annotationProcessorOptions {
                includeCompileClasspath false
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            multiDexEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            multiDexEnabled true
        }
    }
    testOptions {
        unitTests.returnDefaultValues = true
    }

    flavorDimensions "environment"
    productFlavors {
        development {
            dimension "environment"
            buildConfigString "SEKRIT", buildProperties.secrets['SEKRIT']
            buildConfigString "SERVER_URI", buildProperties.secrets['SERVER_URI']
            buildConfigString "BLOCKEXPLORER_URI", buildProperties.secrets['BLOCKEXPLORER_URI']
        }
    }
    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }
    packagingOptions {
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/rxjava.properties'
    }
    buildToolsVersion '28.0.3'

    testOptions {
        // Always show the result of every unit test, even if it passes.
        unitTests.all {
            testLogging {
                events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
            }
            reports.junitXml.destination = file('../build/test-results/')
        }
    }
}


buildscript {
    ext.buildPropertiesVersion = '0.4.1'

    repositories {
        jcenter()
    }

    dependencies {
        // These docs use an open ended version so that our plugin
        // can be updated quickly in response to Android tooling updates

        // We recommend changing it to the latest version from our changelog:
        classpath "com.novoda:gradle-build-properties-plugin:$buildPropertiesVersion"
    }
}

repositories {
    mavenCentral()
}

ext {
    supportLibVersion = '27.0.2'
    retrofitVersion = "2.2.0"
    dagger2Version = '2.19'
    okhttp3Version = '3.11.0'
    slf4jVersion = '1.7.20'
    guavaVersion = '26.0-android'
    buildPropertiesVersion = '0.4.1'
    commonsLang3Version = '3.1'
    autoValueVersion = '1.4.1'
    commonsCodecVerson = '1.10'
    jacksonVersion = '2.9.5'
    bitcoinjVersion = '0.14.7'
    rxJavaVersion = '2.2.3'
    rxAndroidVersion = '2.1.0'
}

dependencies {
    implementation(project(':kmp_core')) {
        exclude group: 'com.google.guava', module: 'guava'
        exclude group: 'org.jetbrains.kotlin', module: 'kotlin-stdlib'
    }

    //implementation fileTree(include: ['*.jar'], dir: 'libs')

    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    implementation 'com.android.support:multidex:1.0.3'
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$rootProject.ext.kotlin_version"

    implementation "com.android.support:support-v13:${supportLibVersion}"
    implementation "com.android.support:appcompat-v7:${supportLibVersion}"
    implementation "com.android.support:recyclerview-v7:${supportLibVersion}"
    implementation "com.android.support:support-v4:${supportLibVersion}"
    implementation "com.android.support:design:${supportLibVersion}"

    implementation "com.squareup.retrofit2:retrofit:${retrofitVersion}"
    implementation "com.squareup.retrofit2:converter-gson:${retrofitVersion}"
    implementation "com.squareup.retrofit2:converter-moshi:${retrofitVersion}"
    implementation "com.squareup.retrofit2:adapter-rxjava2:${retrofitVersion}"

    implementation "io.reactivex.rxjava2:rxjava:${rxJavaVersion}"
    implementation "io.reactivex.rxjava2:rxandroid:${rxAndroidVersion}"

    implementation "com.squareup.okhttp3:okhttp:${okhttp3Version}"
    implementation "com.squareup.okhttp3:okhttp-urlconnection:${okhttp3Version}"
    implementation "com.squareup.okhttp3:logging-interceptor:${okhttp3Version}"

    // dependency injection
    implementation "com.google.dagger:dagger:${dagger2Version}"
    kapt "com.google.dagger:dagger-compiler:${dagger2Version}"
    kapt "com.google.dagger:dagger-android-processor:${dagger2Version}"
    implementation "com.google.dagger:dagger-android-support:${dagger2Version}"

    //wallet
    implementation "org.slf4j:slf4j-simple:$slf4jVersion"
    implementation "com.google.guava:guava:$guavaVersion"

    implementation "org.apache.commons:commons-lang3:$commonsLang3Version"
    implementation "com.google.auto.value:auto-value:$autoValueVersion"

    //Json(fasterxml)
    implementation "commons-codec:commons-codec:$commonsCodecVerson"
    implementation "com.fasterxml.jackson.core:jackson-core:$jacksonVersion"
    implementation "com.fasterxml.jackson.core:jackson-annotations:$jacksonVersion"
    implementation "com.fasterxml.jackson.core:jackson-databind:$jacksonVersion"

    //bitcoinj
    implementation ("org.bitcoinj:bitcoinj-core:$bitcoinjVersion") {
        exclude module: 'scrypt'
    }

    // Unit Test dependencies
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    testImplementation "junit:junit:4.12"
    testImplementation "org.mockito:mockito-core:2.19.1"
    testImplementation "org.hamcrest:hamcrest-junit:2.0.0.0"
    testImplementation "org.jetbrains.kotlin:kotlin-test-junit:1.2.51"
    testImplementation "org.amshove.kluent:kluent:1.19"
    testImplementation("com.nhaarman:mockito-kotlin:1.5.0") {
        ['kotlin-stdlib', 'kotlin-reflect'].each { exclude module: it }
    }
}

kapt {
    generateStubs = true
}
